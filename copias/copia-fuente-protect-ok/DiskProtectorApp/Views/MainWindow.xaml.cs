using DiskProtectorApp.Logging;
using DiskProtectorApp.ViewModels;
using MahApps.Metro.Controls;
using System;
using System.Diagnostics;
using System.IO;
using System.Security.Principal;
using System.Windows;

namespace DiskProtectorApp.Views
{
    public partial class MainWindow : MetroWindow
    {
        public MainWindow()
        {
            AppLogger.LogUI("MainWindow constructor starting...");
            
            try
            {
                AppLogger.LogUI("Initializing component...");
                InitializeComponent();
                AppLogger.LogUI("Component initialized successfully");
                
                // Actualizar el t√≠tulo con la versi√≥n de la aplicaci√≥n
                var version = System.Reflection.Assembly.GetExecutingAssembly().GetName().Version;
                if (version != null)
                {
                    this.Title = $"DiskProtectorApp v{version.Major}.{version.Minor}.{version.Build}";
                    AppLogger.LogUI($"Window title set to: {this.Title}");
                }
                
                AppLogger.LogUI("Creating MainViewModel...");
                var viewModel = new MainViewModel();
                AppLogger.LogUI("MainViewModel created successfully");
                
                DataContext = viewModel;
                AppLogger.LogUI("DataContext set successfully");
                AppLogger.LogUI("MainWindow initialized successfully");
            }
            catch (Exception ex)
            {
                AppLogger.Fatal("UI", "Error initializing MainWindow", ex);
                MessageBox.Show($"Error cr√≠tico al inicializar la ventana principal:\n{ex.Message}\n\nDetalles:\n{ex}\n\nLa aplicaci√≥n se cerrar√°.",
                              "Error de inicializaci√≥n",
                              MessageBoxButton.OK,
                              MessageBoxImage.Error);
                
                // Intentar cerrar la aplicaci√≥n si estamos en el contexto correcto
                try 
                {
                    Application.Current?.Shutdown();
                }
                catch { /* Ignorar errores al intentar cerrar */ }
            }
        }

        private void HelpButton_Click(object sender, RoutedEventArgs e)
        {
            AppLogger.LogUI("Help button clicked");
            
            var version = System.Reflection.Assembly.GetExecutingAssembly().GetName().Version;
            string versionText = version != null ? $"v{version.Major}.{version.Minor}.{version.Build}" : "v1.2.6";
            
            var helpText = $@"INFORMACI√ìN DEL DESARROLLADOR:

- Nombre: Emigdio Alexey Jimenez Acosta
- Email: ealexeyja@gmail.com
- Tel√©fono: +53 5586 0259

DESCRIPCI√ìN:
Aplicaci√≥n para protecci√≥n de discos mediante gesti√≥n de permisos NTFS.

‚ö†Ô∏è REQUISITOS T√âCNICOS:
üî∑ EJECUCI√ìN COMO ADMINISTRADOR:
‚Ä¢ La aplicaci√≥n DEBE ejecutarse con privilegios de administrador
‚Ä¢ Click derecho ‚Üí ""Ejecutar como administrador""

üî∑ RUNTIME NECESARIO:
‚Ä¢ Microsoft .NET 8.0 Desktop Runtime x64
‚Ä¢ Descargar desde: https://dotnet.microsoft.com/download/dotnet/8.0

üî∑ SISTEMA OPERATIVO:
‚Ä¢ Windows 10/11 x64
‚Ä¢ Sistema de archivos NTFS

INSTRUCCIONES DE USO:
1. Ejecutar la aplicaci√≥n como Administrador
2. Seleccionar los discos a proteger/desproteger
3. Click en el bot√≥n correspondiente
4. Esperar confirmaci√≥n de la operaci√≥n

üìù REGISTRO DE OPERACIONES:
‚Ä¢ Todas las operaciones se registran en:
‚Ä¢ %APPDATA%\DiskProtectorApp\Logs\operation.log
‚Ä¢ Se conservan los √∫ltimos registros

LOGS DE DIAGN√ìSTICO:
‚Ä¢ Logs detallados en:
‚Ä¢ %APPDATA%\DiskProtectorApp\Logs\
‚Ä¢ Categor√≠as: UI, ViewModel, Service, Operation, Permission
‚Ä¢ Niveles: DEBUG, INFO, WARN, ERROR, FATAL

Versi√≥n actual: {versionText}";

            MessageBox.Show(helpText, "Ayuda de DiskProtectorApp", MessageBoxButton.OK, MessageBoxImage.Information);
        }

        protected override void OnContentRendered(EventArgs e)
        {
            base.OnContentRendered(e);
            AppLogger.LogUI("MainWindow content rendered");
        }
    }
}
