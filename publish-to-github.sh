#!/bin/bash

echo "=== Publicando nueva versi√≥n en GitHub ==="

# Obtener la versi√≥n actual
CURRENT_VERSION=$(grep -o '<Version>[^<]*' src/DiskProtectorApp/DiskProtectorApp.csproj | cut -d'>' -f2)
echo "üì¶ Versi√≥n a publicar: v$CURRENT_VERSION"

# Verificar que existe el archivo comprimido
if [ ! -f "./DiskProtectorApp-v$CURRENT_VERSION.tar.gz" ]; then
    echo "‚ùå Error: No se encontr√≥ el archivo comprimido."
    echo "   Ejecuta './build-and-release.sh' primero"
    exit 1
fi

echo "üöÄ Publicando en GitHub..."
echo "========================"

# Asegurarse de que todos los cambios est√°n commiteados
echo "1Ô∏è‚É£ Agregando todos los archivos..."
git add .

echo "2Ô∏è‚É£ Creando commit..."
git commit -m "release: v$CURRENT_VERSION - Nueva versi√≥n"

echo "3Ô∏è‚É£ Subiendo cambios a GitHub..."
git push origin main

echo "4Ô∏è‚É£ Creando tag v$CURRENT_VERSION..."
git tag -a v$CURRENT_VERSION -m "Release v$CURRENT_VERSION"

echo "5Ô∏è‚É£ Subiendo tag a GitHub..."
git push origin v$CURRENT_VERSION

echo ""
echo "üéâ ¬°Publicaci√≥n completada exitosamente!"
echo "   Versi√≥n publicada: v$CURRENT_VERSION"
echo ""
echo "üìä Siguientes pasos:"
echo "   - El workflow de GitHub Actions se ejecutar√° autom√°ticamente"
echo "   - Puedes monitorear el progreso en la secci√≥n Actions de tu repositorio"
echo "   - Una vez completado, el release estar√° disponible en la secci√≥n Releases"
echo ""
echo "üîó Enlaces √∫tiles:"
echo "   GitHub Actions: https://github.com/tu-usuario/DiskProtectorApp/actions"
echo "   GitHub Releases: https://github.com/tu-usuario/DiskProtectorApp/releases"
