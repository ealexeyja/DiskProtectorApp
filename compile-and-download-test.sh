#!/bin/bash

echo "=== Compilando y preparando versi√≥n de prueba ==="

# Verificar que estamos en el directorio correcto
if [ ! -f "src/DiskProtectorApp/DiskProtectorApp.csproj" ]; then
    echo "‚ùå Error: No se encontr√≥ el archivo de proyecto. Aseg√∫rate de ejecutar este script desde la ra√≠z del repositorio."
    exit 1
fi

# Obtener la versi√≥n actual del proyecto
CURRENT_VERSION=$(grep -o '<Version>[^<]*' src/DiskProtectorApp/DiskProtectorApp.csproj | cut -d'>' -f2)
if [ -z "$CURRENT_VERSION" ]; then
    CURRENT_VERSION="1.1.0"
fi

echo "üì¶ Versi√≥n actual: v$CURRENT_VERSION"

# Limpiar compilaciones anteriores
echo "üßπ Limpiando compilaciones anteriores..."
rm -rf ./publish ./publish-test ./publish-v$CURRENT_VERSION ./DiskProtectorApp-test

# Restaurar dependencias
echo "üì• Restaurando dependencias..."
if ! dotnet restore src/DiskProtectorApp/DiskProtectorApp.csproj; then
    echo "‚ùå Error al restaurar dependencias"
    exit 1
fi

# Compilar el proyecto
echo "üî® Compilando el proyecto..."
if ! dotnet build src/DiskProtectorApp/DiskProtectorApp.csproj --configuration Release --no-restore; then
    echo "‚ùå Error al compilar el proyecto"
    exit 1
fi

# Publicar la aplicaci√≥n para prueba
echo "üöÄ Publicando la aplicaci√≥n para prueba..."
if ! dotnet publish src/DiskProtectorApp/DiskProtectorApp.csproj \
    -c Release \
    -r win-x64 \
    --self-contained false \
    -o ./publish-test; then
    echo "‚ùå Error al publicar la aplicaci√≥n"
    exit 1
fi

# Verificar que la publicaci√≥n se gener√≥ correctamente
if [ ! -f "./publish-test/DiskProtectorApp.exe" ]; then
    echo "‚ùå Error: No se encontr√≥ el ejecutable publicado"
    exit 1
fi

echo ""
echo "‚úÖ ¬°Publicaci√≥n para prueba completada exitosamente!"
echo "   Versi√≥n: v$CURRENT_VERSION"
echo "   Carpeta de publicaci√≥n: publish-test/"
echo ""
echo "üìä Informaci√≥n del ejecutable:"
ls -lh ./publish-test/DiskProtectorApp.exe

# Crear la estructura de prueba CORRECTA (todos los archivos en el mismo directorio para .NET)
echo "üìÇ Creando estructura de prueba CORRECTA para .NET..."
mkdir -p ./DiskProtectorApp-test

# Copiar todos los archivos a la carpeta de prueba (estructura plana requerida por .NET)
cp -r ./publish-test/* ./DiskProtectorApp-test/

# Eliminar recursos alemanes si existen
if [ -d "./DiskProtectorApp-test/de" ]; then
    rm -rf ./DiskProtectorApp-test/de
    echo "üóëÔ∏è Recursos en alem√°n eliminados"
fi

# Crear archivo readme con instrucciones de prueba
cat > ./DiskProtectorApp-test/README-TEST.txt << 'READMEEOF'
DiskProtectorApp v$CURRENT_VERSION - Versi√≥n de Prueba
=====================================================

ESTRUCTURA DE ARCHIVOS CORRECTA PARA .NET:
Todos los archivos (.exe, .dll, recursos) en el mismo directorio

‚îú‚îÄ‚îÄ DiskProtectorApp.exe     # Ejecutable principal
‚îú‚îÄ‚îÄ *.dll                    # Librer√≠as y dependencias
‚îú‚îÄ‚îÄ en/                      # Recursos localizados (ingl√©s)
‚îÇ   ‚îî‚îÄ‚îÄ [archivos de recursos]
‚îú‚îÄ‚îÄ es/                      # Recursos localizados (espa√±ol)
‚îÇ   ‚îî‚îÄ‚îÄ [archivos de recursos]
‚îú‚îÄ‚îÄ *.json                   # Archivos de configuraci√≥n
‚îî‚îÄ‚îÄ *.config                 # Archivos de configuraci√≥n

REQUISITOS DEL SISTEMA:
- Windows 10/11 x64
- Microsoft .NET 8.0 Desktop Runtime x64
- Ejecutar como Administrador

INSTRUCCIONES DE PRUEBA:
1. Ejecutar DiskProtectorApp.exe como Administrador
2. Seleccionar los discos a proteger/desproteger
3. Click en el bot√≥n correspondiente
4. Esperar confirmaci√≥n de la operaci√≥n
5. Verificar que los botones se activen/desactiven correctamente
6. Verificar que el estado de los discos se actualice despu√©s de cada operaci√≥n

REGISTRO DE OPERACIONES:
‚Ä¢ Todas las operaciones se registran en:
‚Ä¢ %APPDATA%\DiskProtectorApp\app-debug.log
‚Ä¢ %APPDATA%\DiskProtectorApp\operations.log
‚Ä¢ Se conservan los √∫ltimos 30 d√≠as de registros

FUNCIONAMIENTO ESPERADO:
‚Ä¢ Botones de Proteger/Desproteger se activan/desactivan seg√∫n selecci√≥n
‚Ä¢ Estado de los discos se actualiza autom√°ticamente despu√©s de operaciones
‚Ä¢ Administradores mantienen control total en todo momento
‚Ä¢ Usuarios est√°ndar pierden/ganan permisos seg√∫n operaci√≥n

 Versi√≥n de prueba: v$CURRENT_VERSION
READMEEOF

# Actualizar la versi√≥n en el README de prueba
sed -i "s/DiskProtectorApp v[0-9]*\.[0-9]*\.[0-9]*/DiskProtectorApp v$CURRENT_VERSION/g" ./DiskProtectorApp-test/README-TEST.txt
sed -i "s/Versi√≥n de prueba: v[0-9]*\.[0-9]*\.[0-9]*/Versi√≥n de prueba: v$CURRENT_VERSION/g" ./DiskProtectorApp-test/README-TEST.txt

# Crear archivo comprimido de prueba
echo "üì¶ Creando archivo comprimido de prueba..."
tar -czf DiskProtectorApp-test-v$CURRENT_VERSION.tar.gz -C ./DiskProtectorApp-test .

echo ""
echo "‚úÖ ¬°Versi√≥n de prueba v$CURRENT_VERSION creada exitosamente!"
echo "   Archivos generados:"
echo "   - Carpeta de prueba: DiskProtectorApp-test/"
echo "   - Carpeta de publicaci√≥n: publish-test/"
echo "   - Archivo comprimido: DiskProtectorApp-test-v$CURRENT_VERSION.tar.gz"
echo ""
echo "üìä Tama√±o del archivo comprimido:"
ls -lh DiskProtectorApp-test-v$CURRENT_VERSION.tar.gz

echo ""
echo "üì• Para descargar el archivo de prueba:"
echo "   En Codespaces: Haz clic derecho en 'DiskProtectorApp-test-v$CURRENT_VERSION.tar.gz' y selecciona 'Download'"
echo "   En terminal: scp usuario@servidor:/ruta/DiskProtectorApp-test-v$CURRENT_VERSION.tar.gz ."
echo ""
echo "üß™ Instrucciones de prueba:"
echo "   1. Extraer el archivo en un entorno Windows"
echo "   2. Ejecutar 'DiskProtectorApp.exe' como Administrador"
echo "   3. Verificar funcionamiento de botones y actualizaci√≥n de estado"
echo "   4. Revisar logs en %APPDATA%\\DiskProtectorApp\\"
echo "   5. Reportar cualquier problema encontrado"
