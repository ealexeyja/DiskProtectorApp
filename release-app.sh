#!/bin/bash

# release-app.sh - Proceso completo de release de DiskProtectorApp

set -e # Salir inmediatamente si un comando falla

echo "=== Proceso completo de release de DiskProtectorApp ==="

# Verificar que estamos en el directorio correcto
if [ ! -f "src/DiskProtectorApp/DiskProtectorApp.csproj" ]; then
    echo "‚ùå Error: No se encontr√≥ el archivo de proyecto."
    echo "   Aseg√∫rate de ejecutar este script desde la ra√≠z del repositorio."
    exit 1
fi

# Obtener la versi√≥n actual del proyecto
CURRENT_VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/DiskProtectorApp/DiskProtectorApp.csproj)
if [ -z "$CURRENT_VERSION" ]; then
    CURRENT_VERSION="0.0.0"
fi

echo "üì¶ Versi√≥n actual: v$CURRENT_VERSION"

# Preguntar si desea incrementar la versi√≥n
echo ""
echo "üî¢ ¬øDeseas incrementar la versi√≥n autom√°ticamente? (s/n)"
read -r incrementar
if [[ "$incrementar" =~ ^[Ss]$ ]]; then
    # Usar el script de actualizaci√≥n de versi√≥n
    if [ -f "./update-version.sh" ]; then
        echo "üìà Incrementando versi√≥n autom√°ticamente..."
        ./update-version.sh -i
        
        # Volver a obtener la nueva versi√≥n
        CURRENT_VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/DiskProtectorApp/DiskProtectorApp.csproj)
        echo "üì¶ Nueva versi√≥n: v$CURRENT_VERSION"
    else
        echo "‚ùå No se encontr√≥ el script update-version.sh"
        exit 1
    fi
fi

# Limpiar compilaciones anteriores
echo ""
echo "üßπ Limpiando compilaciones anteriores..."
rm -rf ./publish ./publish-test ./publish-v$CURRENT_VERSION ./DiskProtectorApp-final ./DiskProtectorApp-v$CURRENT_VERSION*.tar.gz ./DiskProtectorApp-v$CURRENT_VERSION*.zip

# Ejecutar proceso completo
echo ""
echo "üî® Iniciando proceso de compilaci√≥n..."
if [ -f "./build-app.sh" ]; then
    ./build-app.sh
else
    echo "‚ùå No se encontr√≥ el script build-app.sh"
    exit 1
fi

echo ""
echo "üìÇ Iniciando proceso de organizaci√≥n..."
if [ -f "./organize-app.sh" ]; then
    ./organize-app.sh
else
    echo "‚ùå No se encontr√≥ el script organize-app.sh"
    exit 1
fi

echo ""
echo "üì¶ Iniciando proceso de empaquetado..."
if [ -f "./package-app.sh" ]; then
    ./package-app.sh
else
    echo "‚ùå No se encontr√≥ el script package-app.sh"
    exit 1
fi

echo ""
echo "üéâ ¬°Proceso de release completado exitosamente!"
echo "   Versi√≥n final: v$CURRENT_VERSION"
echo ""
echo "ÔøΩÔøΩ Archivos generados:"
echo "   - Carpeta organizada: DiskProtectorApp-final/"
echo "   - Carpeta de publicaci√≥n: publish-v$CURRENT_VERSION/"
echo "   - Archivo comprimido TAR.GZ: DiskProtectorApp-v$CURRENT_VERSION-portable.tar.gz"
if [ -f "DiskProtectorApp-v$CURRENT_VERSION-portable.zip" ]; then
    echo "   - Archivo comprimido ZIP: DiskProtectorApp-v$CURRENT_VERSION-portable.zip"
fi
echo ""
echo "üìä Tama√±o de los archivos generados:"
ls -lh DiskProtectorApp-v$CURRENT_VERSION*

echo ""
echo "ÔøΩÔøΩ ¬øDeseas publicar esta versi√≥n en GitHub ahora? (s/n)"
read -p "   Esta acci√≥n incluye crear commit (si hay cambios), tag y subir a GitHub: " -n 1 -r
echo
if [[ $REPLY =~ ^[Ss]$ ]]; then
    if [ -f "./publish-to-github.sh" ]; then
        ./publish-to-github.sh
    else
        echo "‚ùå No se encontr√≥ el script publish-to-github.sh"
        echo "   Puedes ejecutarlo manualmente despu√©s con: ./publish-to-github.sh"
    fi
else
    echo "üí° Puedes publicar en GitHub m√°s tarde ejecutando: ./publish-to-github.sh"
fi

echo ""
echo "üéâ ¬°Proceso de release completado exitosamente!"
echo "   Versi√≥n final: v$CURRENT_VERSION"

