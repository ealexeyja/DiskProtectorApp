#!/bin/bash

echo "=== Publicando nueva versi√≥n de DiskProtectorApp ==="

# Verificar que estamos en el directorio correcto
if [ ! -f "src/DiskProtectorApp/DiskProtectorApp.csproj" ]; then
    echo "‚ùå Error: No se encontr√≥ el archivo de proyecto. Aseg√∫rate de ejecutar este script desde la ra√≠z del repositorio."
    exit 1
fi

# Obtener la versi√≥n actual del proyecto
CURRENT_VERSION=$(grep -o '<Version>[^<]*' src/DiskProtectorApp/DiskProtectorApp.csproj | cut -d'>' -f2)
if [ -z "$CURRENT_VERSION" ]; then
    CURRENT_VERSION="1.1.0"
fi

echo "üì¶ Versi√≥n a publicar: v$CURRENT_VERSION"

# Verificar si hay cambios sin commitear
if ! git diff-index --quiet HEAD --; then
    echo "üîç Cambios detectados, procediendo con la publicaci√≥n..."
else
    echo "‚úÖ No hay cambios pendientes"
fi

echo ""
echo "üöÄ Ejecutando pasos de publicaci√≥n..."
echo "==================================="

# Paso 1: git add .
echo "1Ô∏è‚É£ Agregando todos los archivos..."
git add .

# Paso 2: git commit
echo "2Ô∏è‚É£ Creando commit..."
git commit -m "release: v$CURRENT_VERSION - Nueva versi√≥n"

# Paso 3: git push origin main
echo "3Ô∏è‚É£ Subiendo cambios a GitHub..."
git push origin main

# Paso 4: git tag
echo "4Ô∏è‚É£ Creando tag v$CURRENT_VERSION..."
git tag -a v$CURRENT_VERSION -m "Release v$CURRENT_VERSION"

# Paso 5: git push tag
echo "5Ô∏è‚É£ Subiendo tag a GitHub..."
git push origin v$CURRENT_VERSION

echo ""
echo "üéâ ¬°Publicaci√≥n completada exitosamente!"
echo "   Versi√≥n publicada: v$CURRENT_VERSION"
echo ""
echo "üìä Siguientes pasos:"
echo "   - El workflow de GitHub Actions se ejecutar√° autom√°ticamente"
echo "   - Puedes monitorear el progreso en la secci√≥n Actions de tu repositorio"
echo "   - Una vez completado, el release estar√° disponible en la secci√≥n Releases"
echo ""
echo "üîó Enlaces √∫tiles:"
echo "   GitHub Actions: https://github.com/tu-usuario/DiskProtectorApp/actions"
echo "   GitHub Releases: https://github.com/tu-usuario/DiskProtectorApp/releases"
