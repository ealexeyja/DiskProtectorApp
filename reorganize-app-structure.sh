#!/bin/bash

echo "=== Reorganizando estructura de la aplicaci√≥n para .NET ==="

# Verificar que estamos en el directorio correcto
if [ ! -f "src/DiskProtectorApp/DiskProtectorApp.csproj" ]; then
    echo "‚ùå Error: No se encontr√≥ el archivo de proyecto. Aseg√∫rate de ejecutar este script desde la ra√≠z del repositorio."
    exit 1
fi

# Obtener la versi√≥n actual del proyecto
CURRENT_VERSION=$(grep -o '<Version>[^<]*' src/DiskProtectorApp/DiskProtectorApp.csproj | cut -d'>' -f2)
if [ -z "$CURRENT_VERSION" ]; then
    CURRENT_VERSION="1.1.0"
fi

echo "üì¶ Versi√≥n actual: v$CURRENT_VERSION"

# Limpiar compilaciones anteriores
echo "üßπ Limpiando compilaciones anteriores..."
rm -rf ./publish ./publish-test ./publish-v$CURRENT_VERSION ./DiskProtectorApp-organized ./DiskProtectorApp-final

# Restaurar dependencias
echo "üì• Restaurando dependencias..."
if ! dotnet restore src/DiskProtectorApp/DiskProtectorApp.csproj; then
    echo "‚ùå Error al restaurar dependencias"
    exit 1
fi

# Compilar el proyecto
echo "üî® Compilando el proyecto..."
if ! dotnet build src/DiskProtectorApp/DiskProtectorApp.csproj --configuration Release --no-restore; then
    echo "‚ùå Error al compilar el proyecto"
    exit 1
fi

# Publicar la aplicaci√≥n
echo "üöÄ Publicando la aplicaci√≥n para Windows x64..."
if ! dotnet publish src/DiskProtectorApp/DiskProtectorApp.csproj \
    -c Release \
    -r win-x64 \
    --self-contained false \
    -o ./publish-v$CURRENT_VERSION; then
    echo "‚ùå Error al publicar la aplicaci√≥n"
    exit 1
fi

# Verificar que la publicaci√≥n se gener√≥ correctamente
if [ ! -f "./publish-v$CURRENT_VERSION/DiskProtectorApp.exe" ]; then
    echo "‚ùå Error: No se encontr√≥ el ejecutable publicado"
    exit 1
fi

echo ""
echo "‚úÖ ¬°Publicaci√≥n completada exitosamente!"
echo "   Versi√≥n: v$CURRENT_VERSION"
echo "   Carpeta de publicaci√≥n: publish-v$CURRENT_VERSION/"
echo ""
echo "üìä Informaci√≥n del ejecutable:"
ls -lh ./publish-v$CURRENT_VERSION/DiskProtectorApp.exe

# Crear la estructura final correcta para .NET (todos los archivos en la misma carpeta)
echo ""
echo "üìÇ Creando estructura final correcta para .NET..."

# Crear carpeta final
mkdir -p ./DiskProtectorApp-final

# Copiar todos los archivos a la carpeta final (estructura plana requerida por .NET)
cp -r ./publish-v$CURRENT_VERSION/* ./DiskProtectorApp-final/

# Eliminar recursos alemanes si existen
if [ -d "./DiskProtectorApp-final/de" ]; then
    rm -rf ./DiskProtectorApp-final/de
    echo "üóëÔ∏è Recursos en alem√°n eliminados"
fi

# Crear archivo readme con instrucciones
cat > ./DiskProtectorApp-final/README.txt << 'READMEEOF'
DiskProtectorApp v1.1.0
========================

Estructura de archivos (todos en el mismo directorio):
‚îú‚îÄ‚îÄ DiskProtectorApp.exe     # Ejecutable principal
‚îú‚îÄ‚îÄ *.dll                    # Librer√≠as y dependencias
‚îú‚îÄ‚îÄ en/                      # Recursos localizados (ingl√©s)
‚îÇ   ‚îî‚îÄ‚îÄ [archivos de recursos]
‚îú‚îÄ‚îÄ es/                      # Recursos localizados (espa√±ol)
‚îÇ   ‚îî‚îÄ‚îÄ [archivos de recursos]
‚îú‚îÄ‚îÄ *.json                   # Archivos de configuraci√≥n
‚îî‚îÄ‚îÄ *.config                 # Archivos de configuraci√≥n

Requisitos del sistema:
- Windows 10/11 x64
- .NET 8.0 Desktop Runtime
- Ejecutar como Administrador

Instrucciones:
1. Ejecutar DiskProtectorApp.exe como Administrador
2. Seleccionar los discos a proteger/desproteger
3. Usar los botones de Proteger/Desproteger
READMEEOF

# Actualizar la versi√≥n en el README
sed -i "s/DiskProtectorApp v[0-9]*\.[0-9]*\.[0-9]*/DiskProtectorApp v$CURRENT_VERSION/g" ./DiskProtectorApp-final/README.txt

echo ""
echo "‚úÖ Estructura final creada en ./DiskProtectorApp-final/"
echo "üìÅ Contenido de la carpeta:"
ls -la ./DiskProtectorApp-final/ | head -20

echo ""
echo "üí° Nota importante:"
echo "   Esta estructura plana es la correcta para aplicaciones .NET"
echo "   Las DLLs deben estar en el mismo directorio que el ejecutable"
